import random
import math


class Vector:
    def __init__(self, rozmiar=3):
        self.rozmiar = rozmiar
        if rozmiar < 0:
            raise ValueError('Rozmiar powinien byc liczba naturalna!')
        self.elementy = [0] * rozmiar
        self.elementy = self.generowanie_losowych_elementow()

    def generowanie_losowych_elementow(self):
        for i in range(self.rozmiar):
             self.elementy[i] = random.randint(0, 10)

        return self.elementy

    def __str__(self):
        return f"[{', '.join(str(i) for i in self.elementy)}]"

    def __add__(self, other):
        if len(self.elementy) == len(other.elementy):
            rezultat = Vector(self.rozmiar)
            for i in range(self.rozmiar):
                rezultat.elementy[i] = self.elementy[i] + other.elementy[i]
            return rezultat
        else:
            raise ValueError('Wektory maja rozne dlugosci!')

    def __sub__(self, other):
        if len(self.elementy) == len(other.elementy):
            rezultat = Vector(self.rozmiar)
            for i in range(self.rozmiar):
                rezultat.elementy[i] = self.elementy[i] - other.elementy[i]
            return rezultat
        else:
            raise ValueError('Wektory maja rozne dlugosci!')

    def __mul__ (self, skalar):
        rezultat2 = Vector(self.rozmiar)
        for i in range(self.rozmiar):
            rezultat2.elementy[i] = self.elementy[i] * skalar
        return rezultat2

    def obliczanie_dlugosci(self):
         dlugosc = 0
         for i in range(self.rozmiar):
             dlugosc = dlugosc+ (self.elementy[i])**2
         return math.sqrt(dlugosc)

    def suma_elementow(self):
        suma = 0
        for i in range(self.rozmiar):
            suma = suma + self.elementy[i]
        return suma

    def iloczyn_skalarny(self, other):
        if self.rozmiar == other.rozmiar:
            wynik = 0
            for i in range(self.rozmiar):
                wynik = wynik +(self.elementy[i]*other.elementy[i])
            return wynik
        else:
            raise ValueError('Rozmiar powinien byc liczba naturalna!')

    def __getitem__(self, nr_elementu):
        return self.elementy[nr_elementu]

    def przynaleznosc(self,element):
        return element in self.elementy


n = random.randint(1, 5)
wektor = Vector(n)
print(wektor)
wektor2 = Vector(n)
print(wektor2)
wektor3 = wektor2 + wektor
print(wektor3)
wektor4 = wektor3 - wektor
print(wektor4.obliczanie_dlugosci())
print(wektor-wektor2)
print(wektor4.suma_elementow())
print(wektor.iloczyn_skalarny(wektor2))
print(wektor.__getitem__(0))
print(wektor.przynaleznosc(3))
